#ini file for fitting the mass function using the CosmoSIS Tinker model and only one redshifts

[runtime]
sampler = emcee  #maxlike #emcee
#likelihoods = mass_function_xt
root = ${PWD}
resume = F
verbosity = debug #quiet

[test]
save_dir=mf_xt/output/mass_function_xt

[emcee]
; The emcee sampler uses the concept of walkers, a collection
; of live points.  Sampling is done along lines that connect
; pairs of walkers.  The number of walkers must be at least
; 2*nparam + 1, but in general more than that usually works
; better.
walkers = 32
; This many samples is overkill, just to make the plots
; look a lot nicer
samples = 1600
; This is the interval at which convergence diagnostics
; are performed
nsteps = 30
burn = 500
save_all_parameters = T
output_every = 1

[maxlike]
output_ini = mf_xt/output/mf_maxlike.ini
tolerance = 1e-6

[output]
filename = mf_xt/output/mf_c1.txt
format = text
lock = F
new_file = T

[pipeline]
modules = consistency camb mf_tinker mass_function_like rescale  
values = mf_xt/values_fit.ini
#priors = mf_xt/priors_fit.ini
[prior]
omega_m = uniform 0.2 0.4
sigma8_input = uniform 0.6 1.0

#[likelihoods]
#mass_function_xt = mass_function_like

[consistency]
file = ./utility/consistency/consistency_interface.py

[rescale]
file = utility/sample_sigma8/sigma8_rescale.py

[camb]
file = boltzmann/camb/camb_interface.py
mode = all
lmax = 2500
feedback = 0
zmin = 0.0
zmax = 3.0
nz = 31

[mf_tinker]
file = mass_function/mf_tinker/tinker_mf_module.so
redshift_zero = 0
feedback = 0

[mass_function_like]
file = mf_xt/likelihood/mass_function_like_cov.py
mass_file = mf_xt/results_mf_z03/mass_function/m_h.txt
dndlnmh_file = mf_xt/results_mf_z03/mass_function/dndlnmh.txt
z_index = 5
relative_sigma = 0.1
use_poisson = F